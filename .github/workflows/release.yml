name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish --configuration Release --no-build --output ./publish

    - name: Create ZIP package
      run: |
        $version = "${{ github.ref_name }}"
        Compress-Archive -Path ./publish/* -DestinationPath "WorkOrderBlender-$version.zip"
      shell: pwsh

    - name: Get version from tag
      id: get_version
      run: |
        $version = "${{ github.ref_name }}" -replace '^v', ''
        echo "version=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Update update.xml
      run: |
        $version = "${{ steps.get_version.outputs.version }}"
        $downloadUrl = "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/WorkOrderBlender-${{ github.ref_name }}.zip"
        $changelogUrl = "https://raw.githubusercontent.com/${{ github.repository }}/main/CHANGELOG.md"

        $updateXml = @"
        <?xml version="1.0" encoding="UTF-8"?>
        <item>
          <version>$version</version>
          <url>$downloadUrl</url>
          <changelog>$changelogUrl</changelog>
          <mandatory>false</mandatory>
        </item>
        "@

        $updateXml | Out-File -FilePath "update.xml" -Encoding UTF8
      shell: pwsh

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: WorkOrderBlender ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## Changes in this release

          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.

          ## Installation

          1. Download the `WorkOrderBlender-${{ github.ref_name }}.zip` file
          2. Extract to your desired location
          3. Run `WorkOrderBlender.exe`

          ## Auto-Update

          This version includes auto-update functionality. The application will check for updates on startup and notify you when new versions are available.

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./WorkOrderBlender-${{ github.ref_name }}.zip
        asset_name: WorkOrderBlender-${{ github.ref_name }}.zip
        asset_content_type: application/zip

    - name: Commit updated update.xml
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add update.xml
        git diff --staged --quiet || git commit -m "Update update.xml for version ${{ steps.get_version.outputs.version }}"
        git push origin HEAD:main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
